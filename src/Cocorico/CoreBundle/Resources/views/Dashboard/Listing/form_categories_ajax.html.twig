{% trans_default_domain 'cocorico_listing' %}

<div id="category-form-container">
    {% if app.request.isXmlHttpRequest %}
        {% include 'CocoricoCoreBundle:Frontend/Common:_flash.html.twig' %}
    {% endif %}

    <h3>{{ 'listing.edit.categories.sub_title'|trans }}</h3>

    {{ form_start(form) }}
    {{ form_errors(form) }}

    <div class="selection-area listing-categories ms-4 me-4">
        {{ form_errors(form.category) }}
        {{ form_widget(form.category) }}
    </div>

    <div class="selection-area listing-type ms-4 me-4">
        {{ form_errors(form.type) }}
        {{ form_widget(form.type) }}
    </div>

    {% if bundleExist('CocoricoListingCategoryFieldBundle') %}
        {#ajax form submission is done here#}
        {% include 'CocoricoListingCategoryFieldBundle:Dashboard:Listing/_form_categories_fields_values.html.twig' with {
        'form': form
        } only %}
    {% else %}
        <div class="btn-block text-center">
            <button data-id="submit-category" type="submit" class="btn btn-default btn-primary">
                <span>{{ 'listing.save'|trans }}</span>
            </button>
        </div>
    {% endif %}

    {{ form_end(form) }}

    <script>
        $(function () {

            let showHideType = function($select) {
                const $typeRadios = $('.listing-type');
                let selectedValue = $select.val();
                let $selectedOption = $select.find('option[value="' + selectedValue + '"]');
                if ($selectedOption.attr('data-search') === 'true' && $selectedOption.attr('data-offer') === 'true') {
                    $typeRadios.show();
                } else {
                    $typeRadios.hide();
                }
            }

            const $categorySelect = $('#listing_categories_category');
            showHideType($categorySelect);
            $categorySelect.change(function(event) {
                showHideType($(event.target));
            })

            var categoryFieldBundle = {{ bundleExist('CocoricoListingCategoryFieldBundle') ? 'true' : 'false' }};
            var $formContainer = $("#category-form-container");
            $formContainer.submitAjaxForm(function () {
                jcf.replaceAll("#category-form-container");
            });

            if (categoryFieldBundle) {
                var changeIsDisabled = false;
                //Edition
                $("#listing_categories_listingListingCategories").on('change', function (e) {
                    if (!changeIsDisabled) {
                        changeIsDisabled = true;

                        $(this).closest('form').submit();

                        $(this).find("option:not(:selected)").each(function () {
                            $(this).attr('disabled', 'disabled');
                        });
                        $(this).next('.jcf-list-box').css('opacity', '0.5');
                    } else {
                        e.preventDefault();
                    }
                });
            } else {
                $("[data-id='submit-category']").on('click', function (e) {
                    e.preventDefault();
                    $(this).closest('form').submit();
                });
            }
        });
    </script>
</div>



